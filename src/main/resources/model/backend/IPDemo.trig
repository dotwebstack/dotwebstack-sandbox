GRAPH dbeerpedia:Theatre {

# ==========================
#
# Menu
#
# ==========================

  dbeerpedia:MenuData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:query """
      prefix elmo1: <http://bp4mc2.org/elmo/def#>
      prefix xhtml: <http://www.w3.org/1999/xhtml/vocab#>
      CONSTRUCT {
        [] rdfs:label "Demo";
          xhtml:search "search";
          elmo1:data [elmo1:index "1"; rdfs:label "Menu 1"]
        .
      }
      WHERE {}
    """;
  .

# ==========================
#
# Footer
#
# ==========================

  dbeerpedia:FooterData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:query """
      prefix elmo1: <http://bp4mc2.org/elmo/def#>
      CONSTRUCT {
        [] elmo1:html '''<div class="row">
			<div class="col-sm-4">
				<h4>Links</h4>
				<ul class="list-unstyled">
					<li>
						<a href="https://github.com/architolk/linked-data-theatre">Github codebase</a>
					</li>
					<li>
						<a href="https://github.com/architolk/linked-data-theatre/wiki">Wiki documentation</a>
					</li>
				</ul>
			</div>
			<div class="col-sm-4">
				<h4>Demo configuration</h4>
				<p>This demo configuration is designed to function as a regression test. It should depict all configuration options of the LDT.</p>
			</div>
			<div class="col-sm-4">
				<h4>License</h4>
				<p>GPL 3.0 / CC-BY-SA</p>
			</div>
		</div>'''^^rdf:HTML
      }
      WHERE {}
    """;
  .

# ==========================
#
# Format index
#
# ==========================

  dbeerpedia:FormatIndexData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:query """
      CONSTRUCT {
        [] rdfs:label "a|b|c";
           rdf:value "x|y|z"
      }
      WHERE {}
    """;
  .

# ==========================
#
# Homepage
#
# ==========================

  dbeerpedia:HomepageData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:query """
      prefix elmo1: <http://bp4mc2.org/elmo/def#>
      CONSTRUCT {
        [] rdfs:label "Linked Data Theatre 2.0";
          elmo1:html '''
            <h1>It works!</h1>
            <p>Welcome at the Linked Data Theatre 2.0 demo site</p>
            <p><i>(Running at: %{dotwebstack.config.host})</i></p>
            <p>Please update /config/model to create your own configuration</p>
            <p>You can check this demo configuration via the following links:</p>
            <ul>
              <li><a href="/demo/amersfoort">Amersfoort triples from dbpedia</a></li>
              <li><a href="/dbp/ld/v1/graph-breweries">Breweries triples from local triplestore</a></li>
              <li><a href="/dbp/ld/v1/tuple-breweries">Breweries tuples from local triplestore</a></li>
            </ul>
          '''
        .
      }
      WHERE {}
    """
  .

# ==========================
#
# Generic resource (assuming dbpedia)
#
# ==========================

  dbeerpedia:DBPediaResourceData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:requiredParameter dbeerpedia:SubjectParameter;
    elmo:query """
      CONSTRUCT {
        <${SUBJECT}> ?p ?o
      }
      WHERE {
        <${SUBJECT}> ?p ?o
        FILTER (?p=rdf:type || ?p=rdfs:label)
      }
    """;
  .

# ==========================
#
# Amersfoort (with appearance, CONSTRUCT = ResourceAppearance)
#
# ==========================

  dbeerpedia:AmersfoortData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:query """
      PREFIX dbo: <http://dbpedia.org/ontology/>
      CONSTRUCT {
        <http://dbpedia.org/resource/Amersfoort> ?p ?o
      }
      WHERE {
        <http://dbpedia.org/resource/Amersfoort> ?p ?o.
        FILTER (?p = rdfs:label
             || ?p = rdf:type
             || ?p = dbo:abstract
             || ?p = dbo:thumbnail
        )
        FILTER (IsIri(?o) || lang(?o)="en")
      }
    """;
  .
  
  dbeerpedia:GlossaryData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:query """
      prefix elmo1: <http://bp4mc2.org/elmo/def#>
      CONSTRUCT {
        <http://dbpedia.org/resource/Utrecht> elmo1:name "province of Utrecht"@en
      }
      WHERE {}
    """
  .

# ==========================
#
# Search (without appearance, SELECT = TableAppearance)
#
# ==========================

  dbeerpedia:SearchData a elmo:InformationProduct;
    elmo:backend dbeerpedia:LOVBackend;
    elmo:requiredParameter dbeerpedia:TermParameter;
    elmo:resultType elmo-resulttype:Tuple;
    elmo:query """
      PREFIX vann: <http://purl.org/vocab/vann/>
      SELECT *
      WHERE {
        ?vocabURI vann:preferredNamespacePrefix ?TERM.
      }
      LIMIT 10
    """;
  .

# ==========================
#
# Places (menu, tree, table, footer)
#
# ==========================

  dbeerpedia:PlacesData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:resultType elmo-resulttype:Tuple;
    elmo:query """
      PREFIX dbr: <http://dbpedia.org/resource/>
      PREFIX dbo: <http://dbpedia.org/ontology/>
      SELECT *
      WHERE {
        ?province dbo:type dbr:Provinces_of_the_Netherlands.
        ?province rdfs:label ?province_label
        FILTER (lang(?province_label)="nl")
      }
    """
  .
  
  #
  # Places tree
  #
  dbeerpedia:PlacesTreeData a elmo:InformationProduct;
    elmo:backend dbeerpedia:DBPediaBackend;
    elmo:query """
      PREFIX dbr: <http://dbpedia.org/resource/>
      PREFIX dbo: <http://dbpedia.org/ontology/>
      CONSTRUCT {
        ?place dbo:isPartOf ?province.
        ?place rdfs:label ?place_label.
        ?province rdfs:label ?province_label.
      }
      WHERE {
        ?place dbo:country dbr:Netherlands.
        ?place rdfs:label ?place_label.
        ?place dbo:isPartOf ?province.
        ?province rdfs:label ?province_label.
        FILTER (lang(?place_label)="nl")
        FILTER (lang(?province_label)="nl")
      }
    """;
  .
  
}
