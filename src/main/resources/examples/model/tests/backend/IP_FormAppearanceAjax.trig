graph config:TestTheatre {

  config:IP_FormAppearanceAjax a elmo:InformationProduct;
    elmo:query '''
      construct {
        <${name}> ?p ?o.
        <urn:Parameters> rdfs:label "Parameters".
        <urn:Parameters> <urn:Parameters#species> "${species}".
        <urn:Parameters> <urn:Parameters#species_label> "${species_label}".
        <urn:Parameters> <urn:Parameters#name> "${name}".
        <urn:Parameters> <urn:Parameters#name_label> "${name_label}".
        <urn:Parameters> <urn:Parameters#city> "${city}".
        <urn:Parameters> <urn:Parameters#city_label> "${city_label}".
      }
      where {
        graph <http://localhost:8080/stage> {
          <${name}> ?p ?o
        }
      }
    '''
  .

  config:IP_FormAppearanceAjax-species a elmo:InformationProduct;
   elmo:query '''
      construct {
        ?species rdfs:label ?specieslabel
      }
      where {
        graph <http://localhost:8080/stage> {
          ?species rdf:type owl:Class.
          ?species rdfs:label ?specieslabel
          FILTER (lang(?specieslabel)="" || lang(?specieslabel)="${language}")
          FILTER (regex(?specieslabel,"${species}","i"))
        }
      }
    ''';
  .

  config:IP_FormAppearanceAjax-persons a elmo:InformationProduct;
    elmo:query '''
      construct {
        ?person rdfs:label ?person_label
      }
      where {
        graph <http://localhost:8080/stage> {
          ?person a <${species}>.
          ?person rdfs:label ?person_label.
        }
      }
    ''';
  .

  config:IP_FormAppearanceAjax-cities a elmo:InformationProduct;
  elmo:query '''
      construct {
        ?city rdfs:label ?label
      }
      where {
        ?city rdf:type <http://dbpedia.org/ontology/City>.
        ?city rdfs:label ?label.
        FILTER (lang(?label)="" || lang(?label)="${language}")
        FILTER (regex(?label,"${city}","i"))
      }
    ''';
  .
}